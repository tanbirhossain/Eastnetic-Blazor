@page "/addwindow"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Window</PageTitle>

<div class="row">
    <div class="col-md-4">
        <form>
            <div class="form-group">
                <label for="Name" class="control-label">Òrder</label>
                <select class="form-control selectpicker" @bind="model.OrderId">
                    @*<option>--select--</option>*@
                    @foreach (var item in orders)
                    {
                        <option value="@item.Id">@item.Name</option>
                    }
                </select>
                @*<input for="Name" class="form-control" @bind-value="model.OrderId" />*@
            </div>
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <input for="Name" class="form-control" @bind-value="model.Name" />
            </div>

            <div class="form-group">
                <label asp-for="Department" class="control-label">QuantityOfWindows</label>
                <input asp-for="Department" class="form-control" @bind-value="model.QuantityOfWindows" />
            </div>
            <div class="form-group">
                <label asp-for="Department" class="control-label">TotalSubElements</label>
                <input asp-for="Department" class="form-control" @bind-value="model.TotalSubElements" />
            </div>


            <div class="form-group">
                <button type="button" class="btn btn-primary" onclick="@(async () => await Save())">Save</button>
                <button class="btn" onclick="@(cancel)">Cancel</button>
            </div>
        </form>
    </div>
</div>

@code {
    WindowDto model = new WindowDto();
    private List<OrderDto>? orders;

    protected override async Task OnInitializedAsync()
    {
        orders = await Http.GetFromJsonAsync<List<OrderDto>>("order/GetOrders");
    }
    protected async Task Save()
    {
        var response = await Http.PostAsJsonAsync("Window/SaveWindow", model);
        NavigationManager.NavigateTo("windows");
    }
    void cancel()
    {
        NavigationManager.NavigateTo("windows");
    }
}
