@page "/addorder"
@inject HttpClient Http
@inject NavigationManager NavigationManager

<PageTitle>Order</PageTitle>

<div class="row">
    <div class="col-md-4">
        @*<form>*@
        <EditForm Model="@order" OnValidSubmit="@Save">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="Name" class="control-label">Name</label>
                <input for="Name" class="form-control" @bind-value="order.Name" />
            </div>

            <div class="form-group">
                <label asp-for="State" class="control-label">State</label>
                <input asp-for="State" class="form-control" @bind-value="order.State" />
            </div>

            <div class="form-group mt-2">
                <button type="submit" class="btn btn-primary">Save</button>
                <button class="btn btn-secondary" onclick="@(cancel)">Cancel</button>
            </div>
        </EditForm>
        @*</form>*@
    </div>
</div>

@code {
    OrderDto order = new OrderDto();

    protected async Task Save()
    {
        var response = await Http.PostAsJsonAsync("Order/SaveOrder", order);
        NavigationManager.NavigateTo("orders");
    }
    protected override async Task OnInitializedAsync()
    {
        //orders = await Http.GetFromJsonAsync<OrderDto[]>("order/GetOrders");
    }
    void cancel()
    {
        NavigationManager.NavigateTo("orders");
    }
}
